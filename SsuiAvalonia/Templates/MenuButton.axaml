<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:flat="clr-namespace:SolidShineUi" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="avares://SolidShineUi.Avalonia/Templates/Buttons.axaml" />
        <ResourceInclude Source="avares://SolidShineUi.Avalonia/Templates/Menus.axaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Add Resources Here -->
    <Design.PreviewWith>
        <StackPanel Margin="7,7,7,60" Width="110" >
            <flat:MenuButton Content="Button1" >
                <flat:MenuButton.Menu>
                    <flat:ContextMenu>
                        <MenuItem Header="Item 1" />
                        <MenuItem Header="Item 2" />
                    </flat:ContextMenu>
                </flat:MenuButton.Menu>
            </flat:MenuButton>
            <flat:MenuButton KeepMenuArrowOnRight="True" >
                <TextBlock>Button2</TextBlock>
                <flat:MenuButton.Menu>
                    <flat:ContextMenu>
                        <MenuItem Header="Item 1" />
                        <MenuItem Header="Item 2" />
                    </flat:ContextMenu>
                </flat:MenuButton.Menu>
            </flat:MenuButton>
            <flat:MenuButton IsEnabled="False" >
                <TextBlock>Button3</TextBlock>
            </flat:MenuButton>
            <flat:MenuButton IsEnabled="False" KeepMenuArrowOnRight="True" >
                <TextBlock>Button4</TextBlock>
            </flat:MenuButton>
            <flat:MenuButton ShowMenuArrow="False" >
                <TextBlock>Button5</TextBlock>
                <flat:MenuButton.Menu>
                    <flat:ContextMenu>
                        <MenuItem Header="Item 1" />
                        <MenuItem Header="Item 2" />
                    </flat:ContextMenu>
                </flat:MenuButton.Menu>
            </flat:MenuButton>
        </StackPanel>
    </Design.PreviewWith>

    <ControlTheme x:Key="{x:Type flat:MenuButton}" TargetType="flat:MenuButton">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Padding" Value="5,0,5,0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type flat:MenuButton}">
                <Border x:Name="btn_Border" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
						BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" >
                    <Border BorderThickness="0" x:Name="btn_DefaultIndicator">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                                    <ContentPresenter x:Name="btn_Cc" Margin="{TemplateBinding Padding}" Opacity="1.0"
                                                  Content="{TemplateBinding Content}" />
                                    <Path Grid.Column="1" x:Name="PART_InlinePath" Data="M0,0 L8,0 4,4 z" 
                                          HorizontalAlignment="Left" VerticalAlignment="Center" Height="5" Width="8"
                                          Margin="3,0,3,0" Stretch="Fill" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}"
                                          Opacity="1.0" IsVisible="False" />
                                </StackPanel>
                                <Path Grid.Column="1" x:Name="PART_RightPath" Data="M0,0 L8,0 4,4 z"
                                          HorizontalAlignment="Left" VerticalAlignment="Center" Height="5" Width="8"
                                          Margin="3,0,3,0" Stretch="Fill" Fill="{TemplateBinding Foreground}" Stroke="{TemplateBinding Foreground}"
                                          Opacity="1.0" IsVisible="False" />
                            </Grid>
                            <!--<Rectangle x:Name="brdr_Focus" Margin="1" StrokeThickness="1" Opacity="0.8" 
                                        StrokeDashArray="1 3" Visibility="Collapsed"
									   Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
							</Rectangle>-->
                        </Grid>
                    </Border>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[TransparentBack=true] /template/ Border#btn_Border" >
            <Setter Property="Background" Value="#01000000" />
            <Setter Property="BorderBrush" Value="#01000000" />
        </Style>

        <Style Selector="^[IsSelected=true] /template/ Border#btn_Border" >
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedBrush}" />
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderSelectedBrush}" />
            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderSelectionThickness}" />
        </Style>

        <Style Selector="^[ShowMenuArrow=true][KeepMenuArrowOnRight=false] /template/ Path#PART_InlinePath">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^[ShowMenuArrow=true][KeepMenuArrowOnRight=true] /template/ Path#PART_RightPath">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <!--<Style Selector="^[IsSelected=true][TransparentBack=true] /template/ Border#btn_Border" >
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedBrush}" />
        </Style>-->

        <Style Selector="^:disabled">
            <Setter Property="Focusable" Value="False" />
        </Style>

        <Style Selector="^:disabled /template/ ContentPresenter#btn_Cc">
            <Setter Property="Opacity" Value="0.6" />
        </Style>

        <Style Selector="^:disabled /template/ Path#PART_InlinePath">
            <Setter Property="Opacity" Value="0.6" />
        </Style>

        <Style Selector="^:disabled /template/ Path#PART_RightPath">
            <Setter Property="Opacity" Value="0.6" />
        </Style>

        <Style Selector="^:disabled /template/ Border#btn_Border" >
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBrush}" />
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderDisabledBrush}" />
        </Style>

        <Style Selector="^[TransparentBack=true]:disabled /template/ Border#btn_Border" >
            <Setter Property="Background" Value="#01000000" />
            <Setter Property="BorderBrush" Value="#01000000" />
        </Style>

        <Style Selector="^:pointerover /template/ Border#btn_Border">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HighlightBrush}" />
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHighlightBrush}" />
        </Style>

        <Style Selector="^[IsPressed=true] /template/ Border#btn_Border">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ClickBrush}" />
            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHighlightBrush}" />
        </Style>
    </ControlTheme>

</ResourceDictionary>