<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:flat="clr-namespace:SolidShineUi"
                    xmlns:ssut="clr-namespace:SolidShineUi.Utils"
                    xmlns:mnuh="clr-namespace:SolidShineUi.Utils.MenuUtils"
                    xmlns:converters="using:Avalonia.Controls.Converters" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="avares://SolidShineUi.Avalonia/Templates/Buttons.axaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Add Resources Here -->
    <Design.PreviewWith>
        <Border Margin="2,3,90,100" >
            <Grid RowDefinitions="Auto,1*" >
                <!-- use clashing, bright colors so I can tell it's making a difference lol -->
                <flat:Menu HighlightBrush="Purple" HighlightSubitemBrush="Orange" ClickBrush="Aqua" PopupBorderBrush="Green" FontSize="12" >
                    <flat:Menu.Items>
                        <MenuItem Header="Files" >
                            <MenuItem Header="What" InputGesture="Ctrl+G" />
                            <MenuItem Header="Wow!" InputGesture="F3" >
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="True"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="Menu2">
                                <MenuItem Header="Whoa" />
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="Hello!">
                            <MenuItem Header="RIP Trevor the Vampire" IsEnabled="False" />
                        </MenuItem>
                        <MenuItem Header="Just Me" />
                        <MenuItem Header="Fhqwhgads" >
                            <MenuItem Header="Everybody to the Limit" />
                            <MenuItem Header="Everybody Come On" />
                            <MenuItem Header="Fhqwhgads" />
                        </MenuItem>
                        <MenuItem Header="Help">
                            <MenuItem Header="Help Topics" />
                            <MenuItem Header="Online Help" />
                            <MenuItem Header="Keyboard Shortcuts" />
                            <Separator />
                            <MenuItem Header="Markdown Help" />
                            <Separator />
                            <MenuItem Header="Website" />
                            <Separator />
                            <MenuItem Header="About..." />
                        </MenuItem>
                    </flat:Menu.Items>
                    <flat:Menu.ContextMenu>
                        <flat:ContextMenu FontSize="12" HighlightSubitemBrush="Orange" ClickBrush="Aqua" >
                            <MenuItem Header="Item 1" />
                            <MenuItem Header="Item 2" />
                            <Separator />
                            <MenuItem Header="Subitems">
                                <MenuItem Header="Item 1" />
                                <MenuItem Header="Item 2" />
                            </MenuItem>
                        </flat:ContextMenu>
                    </flat:Menu.ContextMenu>
                </flat:Menu>
            </Grid>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="SsuiMenuScrollViewer" TargetType="mnuh:FlatMenuScrollViewer">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <flat:FlatRepeatButton x:Name="rptTop" DockPanel.Dock="Top"
                                  BorderThickness="0" Height="24"
                                  Background="Transparent"
                                  HighlightBrush="{TemplateBinding HighlightSubitemBrush}"
                                  ClickBrush="{TemplateBinding ClickBrush}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Center"
                                  Interval="120"
                                  ExecuteCommand="{Binding LineUp, RelativeSource={RelativeSource TemplatedParent}}">
                        <flat:FlatRepeatButton.IsVisible>
                            <MultiBinding Converter="{x:Static converters:MenuScrollingVisibilityConverter.Instance}"
                                          ConverterParameter="0">
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalScrollBarVisibility" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height" />
                            </MultiBinding>
                        </flat:FlatRepeatButton.IsVisible>
                        <Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
                                 Height="{DynamicResource ScrollBarButtonArrowIconFontSize}">
                            <Path VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Data="M 19.091797 14.970703 L 10 5.888672 L 0.908203 14.970703 L 0.029297 14.091797 L 10 4.111328 L 19.970703 14.091797 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="20"
                                  Height="20" />
                        </Viewbox>
                    </flat:FlatRepeatButton>
                    <flat:FlatRepeatButton x:Name="rptBottom" DockPanel.Dock="Bottom"
                                  BorderThickness="0"
                                  Background="Transparent"
                                  HighlightBrush="{TemplateBinding HighlightSubitemBrush}"
                                  ClickBrush="{TemplateBinding ClickBrush}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Center"
                                  Interval="120"
                                  ExecuteCommand="{Binding LineDown, RelativeSource={RelativeSource TemplatedParent}}">
                        <flat:FlatRepeatButton.IsVisible>
                            <MultiBinding Converter="{x:Static converters:MenuScrollingVisibilityConverter.Instance}"
                                          ConverterParameter="100">
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalScrollBarVisibility" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height" />
                            </MultiBinding>
                        </flat:FlatRepeatButton.IsVisible>
                        <Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
                                 Height="{DynamicResource ScrollBarButtonArrowIconFontSize}">
                            <Path VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Data="M 18.935547 4.560547 L 19.814453 5.439453 L 10 15.253906 L 0.185547 5.439453 L 1.064453 4.560547 L 10 13.496094 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="20"
                                  Height="20" />
                        </Viewbox>
                    </flat:FlatRepeatButton>
                    <ScrollContentPresenter Name="PART_ContentPresenter">
                        <ScrollContentPresenter.GestureRecognizers>
                            <ScrollGestureRecognizer CanHorizontallyScroll="{Binding CanHorizontallyScroll, ElementName=PART_ContentPresenter}"
                                                     CanVerticallyScroll="{Binding CanVerticallyScroll, ElementName=PART_ContentPresenter}" />
                        </ScrollContentPresenter.GestureRecognizers>
                    </ScrollContentPresenter>
                </DockPanel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <converters:PlatformKeyGestureConverter x:Key="KeyGestureConverter" />
    <x:Double x:Key="MenuFlyoutSubItemPopupHorizontalOffset">-4</x:Double>
    <x:Double x:Key="FlyoutThemeMaxWidth">456</x:Double>
    <Thickness x:Key="MenuIconPresenterMargin">0,0,0,0</Thickness>
    <Thickness x:Key="MenuFlyoutScrollerMargin">0,0,0,0</Thickness>
    <Thickness x:Key="MenuInputGestureTextMargin">10,1,8,1</Thickness>
    <Thickness x:Key="MenuItemPaddingStandard">4,2,4,2</Thickness>
    <Thickness x:Key="MenuItemPaddingLarge">4,6,8,6</Thickness>
    <Thickness x:Key="MenuFlyoutPresenterBorderThemeThickness">1,1,1,1</Thickness>
    <Thickness x:Key="MenuFlyoutPresenterThemePadding">0,0,0,0</Thickness>
    <!--<StreamGeometry x:Key="MenuItemChevronPathData">M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z</StreamGeometry>-->

    <ControlTheme x:Key="SsuiSubItem" TargetType="MenuItem">
        <Setter Property="Background" Value="#01000000" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
        <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
        <Setter Property="Padding" Value="{StaticResource MenuItemPaddingStandard}" />
        <Setter Property="ItemContainerTheme" Value="{DynamicResource SsuiSubItem}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Name="PART_LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="20" SharedSizeGroup="MenuItemIcon" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGT" />
                                <ColumnDefinition Width="14" SharedSizeGroup="MenuItemChevron" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="Check" Grid.Column="0" Height="18" Width="18" HorizontalAlignment="Center"
                                    UseLayoutRounding="True" VerticalAlignment="Center" >
                                <Grid>
                                    <ContentControl x:Name="PART_IconPresenter"
                                        Theme="{StaticResource FluentMenuItemIconTheme}"
                                        Content="{TemplateBinding Icon}"
                                        IsVisible="False"
                                        Margin="{DynamicResource MenuIconPresenterMargin}" />
                                    <Path x:Name="CheckMark" Height="10" Width="10" VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="False" StrokeThickness="0"
                                        Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z"
                                        Fill="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
                                </Grid>
                            </Border>

                            <ContentPresenter Name="PART_HeaderPresenter"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              RecognizesAccessKey="True"
                                              Grid.Column="1"/>
                            <TextBlock x:Name="PART_InputGestureText"
                                       Grid.Column="2"
                                       Classes="CaptionTextBlockStyle"
                                       Margin="{StaticResource MenuInputGestureTextMargin}"
                                       Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}"/>
                            <Path Name="PART_ChevronPath"
                                  Stretch="None"
                                  Width="6"
                                  Height="8"
                                  Data="M0,0 L0,8 L4,4 z"
                                  Fill="{DynamicResource MenuFlyoutSubItemChevron}"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  Grid.Column="3" />
                        </Grid>
                    </Border>
                    <mnuh:FlatMenuPopup Name="PART_Popup"
                           WindowManagerAddShadowHint="True"
                           MenuBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=MenuBackground}"
                           PopupBorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=PopupBorderBrush}"
                           DisabledBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=DisabledBrush}"
                           HighlightSubitemBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=HighlightSubitemBrush}"
                           HighlightBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=HighlightBrush}"
                           CheckedBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=CheckedBrush}"
                           ClickBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=ClickBrush}"
                           MenuCornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=MenuCornerRadius}"
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}"
                           MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                           IsLightDismissEnabled="True"
                           IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                           Placement="RightEdgeAlignedTop"
                           OverlayInputPassThroughElement="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}">
                        <Border Background="{Binding #PART_Popup.MenuBackground}"
                                BorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                                HorizontalAlignment="Stretch"
                                CornerRadius="{Binding #PART_Popup.MenuCornerRadius}">
                            <mnuh:FlatMenuScrollViewer Theme="{StaticResource SsuiMenuScrollViewer}"
                                MenuBackground="{Binding #PART_Popup.MenuBackground}"
                                PopupBorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                DisabledBrush="{Binding #PART_Popup.DisabledBrush}"
                                HighlightSubitemBrush="{Binding #PART_Popup.HighlightSubitemBrush}"
                                HighlightBrush="{Binding #PART_Popup.HighlightBrush}"
                                CheckedBrush="{Binding #PART_Popup.CheckedBrush}"
                                ClickBrush="{Binding #PART_Popup.ClickBrush}"
                                MenuCornerRadius="{Binding #PART_Popup.MenuCornerRadius}"
                                Foreground="{Binding #PART_Popup.Foreground}"
                                Margin="2" > <!-- maybe in the future, let this margin be editable? -->
                                <ItemsPresenter Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                Margin="{DynamicResource MenuFlyoutScrollerMargin}" Grid.IsSharedSizeScope="True" />
                            </mnuh:FlatMenuScrollViewer>
                        </Border>
                    </mnuh:FlatMenuPopup>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
            <Setter Property="IsVisible" Value="True" />
        </Style>
        <Style Selector="^:selected">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=HighlightSubitemBrush}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
            <Style Selector="^ /template/ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
        </Style>

        <!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=ClickBrush}" />
            <Style Selector="^ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
            <Style Selector="^ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
            <Style Selector="^ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=Foreground}" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <!--<Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
            </Style>-->
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=DisabledBrush}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=DisabledBrush}" />
            </Style>
            <Style Selector="^ /template/ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=DisabledBrush}" />
            </Style>
        </Style>

        <Style Selector="^:open /template/ Path#PART_ChevronPath">
            <Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronSubMenuOpened}" />
        </Style>

        <Style Selector="^:empty /template/ Path#PART_ChevronPath">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^:separator">
            <Setter Property="Template">
                <ControlTemplate>
                    <Separator BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type mnuh:FlatMenuScrollViewer}}, Path=PopupBorderBrush}" />
                </ControlTemplate>
            </Setter>
        </Style>
    </ControlTheme>

    <!--<ControlTheme x:Key="SsuiSubSubItem" TargetType="MenuItem" BasedOn="{StaticResource SsuiSubItem}" />-->

    <!--<ControlTheme x:Key="{x:Type mnuh:FlatMenuPopup}" TargetType="mnuh:FlatMenuPopup" BasedOn="{StaticResource {x:Type Popup}}">
        <Setter Property="ItemContainerTheme" Value="{StaticResource SsuiSubItem}" />
    </ControlTheme>-->

    <ControlTheme x:Key="FlatTopLevelMenuItem" TargetType="MenuItem">
        <!--<Setter Property="Background" Value="{Binding $parent[flat:Menu].Background}" />
                <Setter Property="Foreground" Value="{Binding $parent[flat:Menu].Foreground}" />-->
        <Setter Property="Padding" Value="6,0,6,2"/>
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Background}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Foreground}" />
        <Setter Property="ItemContainerTheme">
            <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource SsuiSubItem}" x:DataType="MenuItem" />
        </Setter>
        <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
        <!--<Setter Property="Padding" Value="{DynamicResource MenuBarItemPadding}" />-->
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Panel>
                        <ContentPresenter Name="PART_HeaderPresenter"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"/>
                        <mnuh:FlatMenuPopup Name="PART_Popup"
                               WindowManagerAddShadowHint="False"
                               MenuBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuBackground}"
                               PopupBorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=PopupBorderBrush}"
                               DisabledBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=DisabledBrush}"
                               HighlightSubitemBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightSubitemBrush}"
                               HighlightBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightBrush}"
                               CheckedBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=CheckedBrush}"
                               ClickBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=ClickBrush}"
                               MenuCornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuCornerRadius}"
                               Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Foreground}"
                               MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                               IsLightDismissEnabled="True" IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                               Placement="BottomEdgeAlignedLeft"
                               OverlayInputPassThroughElement="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}">
                            <Border Background="{Binding #PART_Popup.MenuBackground}"
                                    BorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                    BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                    Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                    MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                                    HorizontalAlignment="Stretch" CornerRadius="{Binding #PART_Popup.MenuCornerRadius}">
                                <mnuh:FlatMenuScrollViewer Theme="{StaticResource SsuiMenuScrollViewer}"
                                    MenuBackground="{Binding #PART_Popup.MenuBackground}"
                                    PopupBorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                    DisabledBrush="{Binding #PART_Popup.DisabledBrush}"
                                    HighlightSubitemBrush="{Binding #PART_Popup.HighlightSubitemBrush}"
                                    HighlightBrush="{Binding #PART_Popup.HighlightBrush}"
                                    CheckedBrush="{Binding #PART_Popup.CheckedBrush}"
                                    ClickBrush="{Binding #PART_Popup.ClickBrush}"
                                    MenuCornerRadius="{Binding #PART_Popup.MenuCornerRadius}"
                                    Foreground="{Binding #PART_Popup.Foreground}" 
                                    Margin="2" > <!-- maybe in the future, let this margin be editable? -->
                                    <ItemsPresenter Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    Margin="{DynamicResource MenuFlyoutScrollerMargin}" Grid.IsSharedSizeScope="True" />
                                </mnuh:FlatMenuScrollViewer>
                            </Border>
                        </mnuh:FlatMenuPopup>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightBrush}" />
        </Style>
    </ControlTheme>

    <!--<ControlTheme x:Key="HorizontalMenuItem" TargetType="MenuItem" BasedOn="{StaticResource FlatTopLevelMenuItem}">
        <Setter Property="Padding" Value="{DynamicResource HorizontalMenuFlyoutItemThemePaddingNarrow}" />
        <Setter Property="Margin" Value="{DynamicResource HorizontalMenuFlyoutItemMargin}" />
    </ControlTheme>-->

    <ControlTheme x:Key="FluentMenuItemIconTheme" TargetType="ContentControl">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <ControlTemplate>
                <Viewbox StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" />
                </Viewbox>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!--<Style x:Key="SeparatorStyle" x:DataType="Separator" >
        <Setter Property="Template">
            <ControlTemplate TargetType="Separator">
                <Border BorderThickness="1" flat:BindableHighContrast.HighContrast="{DynamicResource ResourceKey={x:Static Member=SystemParameters.HighContrastKey}}" Margin="25,0,0,0">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Style.Triggers>
                                <Trigger Property="flat:BindableHighContrast.HighContrast" Value="True">
                                    <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>-->

    <ControlTheme x:Key="{x:Type flat:Menu}" TargetType="flat:Menu">
        <!--<ControlTheme.Resources>
            <ControlTheme TargetType="{x:Type MenuItem}" x:DataType="MenuItem" >
                <Setter Property="Template">
                    <ControlTemplate>
                        <StackPanel Orientation="Horizontal">
                            <ContentPresenter Content="{TemplateBinding Header}" />
                            <TextBlock Text="Custom" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter>
            </ControlTheme>
        </ControlTheme.Resources>-->
        <Setter Property="ItemContainerTheme" Value="{StaticResource FlatTopLevelMenuItem}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type flat:Menu}">
                <Grid Background="{TemplateBinding Background}">
                    <ItemsPresenter Margin="2,0,0,0" x:Name="mnu_Il">
                        <ItemsPresenter.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsPresenter.ItemsPanel>
                    </ItemsPresenter>
                </Grid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type flat:ContextMenu}" TargetType="flat:ContextMenu">
        <Setter Property="Background" Value="{TemplateBinding MenuBackground}" />
        <Setter Property="BorderBrush" Value="{TemplateBinding PopupBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}" />
        <Setter Property="CornerRadius" Value="{TemplateBinding MenuCornerRadius}" />
        <Setter Property="MaxWidth" Value="{DynamicResource FlyoutThemeMaxWidth}" />
        <!--<Setter Property="MinHeight" Value="{DynamicResource MenuFlyoutThemeMinHeight}" />-->
        <Setter Property="Padding" Value="{DynamicResource MenuFlyoutPresenterThemePadding}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="WindowManagerAddShadowHint" Value="False" />
        <Setter Property="ItemContainerTheme">
            <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource SsuiSubItem}" x:DataType="MenuItem" />
        </Setter>
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{TemplateBinding MenuBackground}"
                        BorderBrush="{TemplateBinding PopupBorderBrush}"
                        BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                        Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                        MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        CornerRadius="{TemplateBinding MenuCornerRadius}">
                    <mnuh:FlatMenuScrollViewer Theme="{StaticResource SsuiMenuScrollViewer}"
                        MenuBackground="{TemplateBinding MenuBackground}"
                        PopupBorderBrush="{TemplateBinding PopupBorderBrush}"
                        DisabledBrush="{TemplateBinding DisabledBrush}"
                        HighlightSubitemBrush="{TemplateBinding HighlightSubitemBrush}"
                        HighlightBrush="{TemplateBinding HighlightBrush}"
                        CheckedBrush="{TemplateBinding CheckedBrush}"
                        ClickBrush="{TemplateBinding ClickBrush}"
                        MenuCornerRadius="{TemplateBinding MenuCornerRadius}"
                        Foreground="{TemplateBinding Foreground}"
                        VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"
                        Margin="2" >
                        <!-- maybe in the future, let this margin be editable? -->
                        <ItemsPresenter Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}"
                                        KeyboardNavigation.TabNavigation="Continue"
                                        Margin="{DynamicResource MenuFlyoutScrollerMargin}" Grid.IsSharedSizeScope="True" />
                    </mnuh:FlatMenuScrollViewer>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

</ResourceDictionary>
