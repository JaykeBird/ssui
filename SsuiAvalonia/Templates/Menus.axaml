<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:flat="clr-namespace:SolidShineUi"
                    xmlns:ssut="clr-namespace:SolidShineUi.Utils"
                    xmlns:mnuh="clr-namespace:SolidShineUi.Utils.MenuUtils"
                    xmlns:converters="using:Avalonia.Controls.Converters" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="avares://SolidShineUi.Avalonia/Templates/Buttons.axaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Add Resources Here -->
    <Design.PreviewWith>
        <Border Margin="5,3,90,70">
            <Grid RowDefinitions="Auto,1*" >
                <flat:Menu HighlightSubitemBrush="Orange" Foreground="Red" >
                    <flat:Menu.Items>
                        <MenuItem Header="Files" >
                            <MenuItem Header="What" />
                            <MenuItem Header="Wow!" >
                                <MenuItem.Icon>
                                    <CheckBox IsChecked="True"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="Menu2">
                                <MenuItem Header="Whoa" />
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="Okay">
                            <MenuItem Header="RIP Trevor the Vampire" />
                        </MenuItem>
                        <MenuItem Header="Hello!" />
                        <MenuItem Header="Fhqwhgads" >
                            <MenuItem Header="Everybody to the Limit" />
                            <MenuItem Header="Everybody Come On" />
                            <MenuItem Header="Fhqwhgads" />
                        </MenuItem>
                        <MenuItem Header="Help">
                            <MenuItem Header="Help Topics" />
                            <MenuItem Header="Online Help" />
                            <MenuItem Header="Keyboard Shortcuts" />
                            <Separator />
                            <MenuItem Header="About..." />
                        </MenuItem>
                    </flat:Menu.Items>
                </flat:Menu>

                <flat:FlatRepeatButton Grid.Row="1" Content="Button test" Height="24" Margin="5,3" HorizontalAlignment="Left" Padding="10,2" />

            </Grid>
        </Border>
    </Design.PreviewWith>

    <ControlTheme x:Key="SsuiMenuScrollViewer" TargetType="mnuh:FlatMenuScrollViewer">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <ControlTemplate>
                <DockPanel>
                    <flat:FlatRepeatButton x:Name="rptTop" DockPanel.Dock="Top"
                                  BorderThickness="0" Height="24"
                                  Background="Transparent"
                                  HighlightBrush="{TemplateBinding HighlightSubitemBrush}"
                                  ClickBrush="{TemplateBinding HighlightBrush}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Center"
                                  RenderTransform="{x:Null}"
                                  ExecuteCommand="{Binding LineUp, RelativeSource={RelativeSource TemplatedParent}}">
                        <flat:FlatRepeatButton.IsVisible>
                            <MultiBinding Converter="{x:Static converters:MenuScrollingVisibilityConverter.Instance}"
                                          ConverterParameter="0">
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalScrollBarVisibility" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height" />
                            </MultiBinding>
                        </flat:FlatRepeatButton.IsVisible>
                        <Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
                                 Height="{DynamicResource ScrollBarButtonArrowIconFontSize}">
                            <Path VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Data="M 19.091797 14.970703 L 10 5.888672 L 0.908203 14.970703 L 0.029297 14.091797 L 10 4.111328 L 19.970703 14.091797 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="20"
                                  Height="20" />
                        </Viewbox>
                    </flat:FlatRepeatButton>
                    <flat:FlatRepeatButton x:Name="rptBottom" DockPanel.Dock="Bottom"
                                  BorderThickness="0"
                                  Background="Transparent"
                                  HighlightBrush="{TemplateBinding HighlightSubitemBrush}"
                                  ClickBrush="{TemplateBinding HighlightBrush}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Center"
                                  RenderTransform="{x:Null}"
                                  ExecuteCommand="{Binding LineDown, RelativeSource={RelativeSource TemplatedParent}}">
                        <flat:FlatRepeatButton.IsVisible>
                            <MultiBinding Converter="{x:Static converters:MenuScrollingVisibilityConverter.Instance}"
                                          ConverterParameter="100">
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="VerticalScrollBarVisibility" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height" />
                            </MultiBinding>
                        </flat:FlatRepeatButton.IsVisible>
                        <Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
                                 Height="{DynamicResource ScrollBarButtonArrowIconFontSize}">
                            <Path VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Data="M 18.935547 4.560547 L 19.814453 5.439453 L 10 15.253906 L 0.185547 5.439453 L 1.064453 4.560547 L 10 13.496094 Z"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="20"
                                  Height="20" />
                        </Viewbox>
                    </flat:FlatRepeatButton>
                    <ScrollContentPresenter Name="PART_ContentPresenter">
                        <ScrollContentPresenter.GestureRecognizers>
                            <ScrollGestureRecognizer CanHorizontallyScroll="{Binding CanHorizontallyScroll, ElementName=PART_ContentPresenter}"
                                                     CanVerticallyScroll="{Binding CanVerticallyScroll, ElementName=PART_ContentPresenter}" />
                        </ScrollContentPresenter.GestureRecognizers>
                    </ScrollContentPresenter>
                </DockPanel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <converters:PlatformKeyGestureConverter x:Key="KeyGestureConverter" />
    <x:Double x:Key="MenuFlyoutSubItemPopupHorizontalOffset">-4</x:Double>
    <Thickness x:Key="MenuIconPresenterMargin">0,0,12,0</Thickness>
    <Thickness x:Key="MenuInputGestureTextMargin">24,0,0,0</Thickness>
    <StreamGeometry x:Key="MenuItemChevronPathData">M 1,0 10,10 l -9,10 -1,-1 L 8,10 -0,1 Z</StreamGeometry>

    <ControlTheme x:Key="SsuiSubItem" TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}" />
        <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
        <Setter Property="Padding" Value="{DynamicResource MenuFlyoutItemThemePaddingNarrow}" />
        <!--<Setter Property="ItemContainerTheme">
            <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource SsuiSubItem}" x:DataType="MenuItem" />
        </Setter>-->
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Name="PART_LayoutRoot"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIcon" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIGT" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemChevron" />
                            </Grid.ColumnDefinitions>

                            <ContentControl x:Name="PART_IconPresenter"
                                            Theme="{StaticResource FluentMenuItemIconTheme}"
                                            Content="{TemplateBinding Icon}"
                                            IsVisible="False"
                                            Margin="{DynamicResource MenuIconPresenterMargin}" />

                            <ContentPresenter Name="PART_HeaderPresenter"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Stretch"
                                              RecognizesAccessKey="True"
                                              Grid.Column="1"/>
                            <TextBlock x:Name="PART_InputGestureText"
                                       Grid.Column="2"
                                       Classes="CaptionTextBlockStyle"
                                       Margin="{DynamicResource MenuInputGestureTextMargin}"
                                       Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"/>
                            <Path Name="PART_ChevronPath"
                                  Stretch="Uniform"
                                  Width="8"
                                  Height="16"
                                  Data="{StaticResource MenuItemChevronPathData}"
                                  Fill="{DynamicResource MenuFlyoutSubItemChevron}"
                                  Margin="{DynamicResource MenuFlyoutItemChevronMargin}"
                                  VerticalAlignment="Center"
                                  Grid.Column="3" />
                        </Grid>
                    </Border>
                    <mnuh:FlatMenuPopup Name="PART_Popup"
                           WindowManagerAddShadowHint="False"
                           MenuBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuBackground}"
                           PopupBorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=PopupBorderBrush}"
                           DisabledBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=DisabledBrush}"
                           HighlightSubitemBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightSubitemBrush}"
                           HighlightBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightBrush}"
                           CheckedBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=CheckedBrush}"
                           MenuCornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuCornerRadius}"
                           Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Foreground}"
                           MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                           IsLightDismissEnabled="True"
                           IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                           Placement="RightEdgeAlignedBottom"
                           OverlayInputPassThroughElement="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}">
                        <Border Background="{Binding #PART_Popup.MenuBackground}"
                                BorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                                MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
                                HorizontalAlignment="Stretch"
                                CornerRadius="{Binding #PART_Popup.MenuCornerRadius}">
                            <mnuh:FlatMenuScrollViewer Theme="{StaticResource SsuiMenuScrollViewer}"
                                MenuBackground="{Binding #PART_Popup.MenuBackground}"
                                PopupBorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                DisabledBrush="{Binding #PART_Popup.DisabledBrush}"
                                HighlightSubitemBrush="{Binding #PART_Popup.HighlightSubitemBrush}"
                                HighlightBrush="{Binding #PART_Popup.HighlightBrush}"
                                CheckedBrush="{Binding #PART_Popup.CheckedBrush}"
                                MenuCornerRadius="{Binding #PART_Popup.MenuCornerRadius}"
                                Foreground="{Binding #PART_Popup.Foreground}" >
                                <ItemsPresenter Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                Margin="{DynamicResource MenuFlyoutScrollerMargin}" Grid.IsSharedSizeScope="True" />
                            </mnuh:FlatMenuScrollViewer>
                        </Border>
                    </mnuh:FlatMenuPopup>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
            <Setter Property="IsVisible" Value="True" />
        </Style>
        <Style Selector="^:selected">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundPointerOver}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
            </Style>
            <Style Selector="^ /template/ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPointerOver}" />
            </Style>
        </Style>

        <!--  Listen for PART_LayoutRoot:pointerover, so it will not be triggered when subitem is pressed  -->
        <Style Selector="^:pressed /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background" Value="Orange" />
            <Style Selector="^ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
            </Style>
            <Style Selector="^ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
            </Style>
            <Style Selector="^ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronPressed}" />
            </Style>
        </Style>

        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Border#PART_LayoutRoot">
                <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
                <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
            </Style>
            <Style Selector="^ /template/ Path#PART_ChevronPath">
                <Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronDisabled}" />
            </Style>
        </Style>

        <Style Selector="^:open /template/ Path#PART_ChevronPath">
            <Setter Property="Fill" Value="{DynamicResource MenuFlyoutSubItemChevronSubMenuOpened}" />
        </Style>

        <Style Selector="^:empty /template/ Path#PART_ChevronPath">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^:separator">
            <Setter Property="Template">
                <ControlTemplate>
                    <Separator/>
                </ControlTemplate>
            </Setter>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="FlatTopLevelMenuItem" TargetType="MenuItem">
        <!--<Setter Property="Background" Value="{Binding $parent[flat:Menu].Background}" />
                <Setter Property="Foreground" Value="{Binding $parent[flat:Menu].Foreground}" />-->
        <Setter Property="Padding" Value="6,0,6,2"/>
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Background}" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Foreground}" />
        <Setter Property="ItemContainerTheme">
            <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource SsuiSubItem}" x:DataType="MenuItem" />
        </Setter>
        <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
        <!--<Setter Property="Padding" Value="{DynamicResource MenuBarItemPadding}" />-->
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_LayoutRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Panel>
                        <ContentPresenter Name="PART_HeaderPresenter"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"/>
                        <mnuh:FlatMenuPopup Name="PART_Popup"
                               WindowManagerAddShadowHint="False"
                               MenuBackground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuBackground}"
                               PopupBorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=PopupBorderBrush}"
                               DisabledBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=DisabledBrush}"
                               HighlightSubitemBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightSubitemBrush}"
                               HighlightBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightBrush}"
                               CheckedBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=CheckedBrush}"
                               MenuCornerRadius="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=MenuCornerRadius}"
                               Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=Foreground}"
                               MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                               IsLightDismissEnabled="True"
                               IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                               Placement="BottomEdgeAlignedLeft"
                               OverlayInputPassThroughElement="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}">
                            <Border Background="{Binding #PART_Popup.MenuBackground}"
                                    BorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                    BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                                    Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                    MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                                    MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
                                    HorizontalAlignment="Stretch"
                                    CornerRadius="{Binding #PART_Popup.MenuCornerRadius}">
                                <mnuh:FlatMenuScrollViewer Theme="{StaticResource SsuiMenuScrollViewer}"
                                    MenuBackground="{Binding #PART_Popup.MenuBackground}"
                                    PopupBorderBrush="{Binding #PART_Popup.PopupBorderBrush}"
                                    DisabledBrush="{Binding #PART_Popup.DisabledBrush}"
                                    HighlightSubitemBrush="{Binding #PART_Popup.HighlightSubitemBrush}"
                                    HighlightBrush="{Binding #PART_Popup.HighlightBrush}"
                                    CheckedBrush="{Binding #PART_Popup.CheckedBrush}"
                                    MenuCornerRadius="{Binding #PART_Popup.MenuCornerRadius}"
                                    Foreground="{Binding #PART_Popup.Foreground}" >
                                    <ItemsPresenter Name="PART_ItemsPresenter" ItemsPanel="{TemplateBinding ItemsPanel}"
                                                    Margin="{DynamicResource MenuFlyoutScrollerMargin}" Grid.IsSharedSizeScope="True" />
                                </mnuh:FlatMenuScrollViewer>
                            </Border>
                        </mnuh:FlatMenuPopup>
                    </Panel>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}, Path=HighlightBrush}" />
        </Style>
    </ControlTheme>
    
    <ControlTheme x:Key="HorizontalMenuItem" TargetType="MenuItem" BasedOn="{StaticResource FlatTopLevelMenuItem}">
        <Setter Property="Padding" Value="{DynamicResource HorizontalMenuFlyoutItemThemePaddingNarrow}" />
        <Setter Property="Margin" Value="{DynamicResource HorizontalMenuFlyoutItemMargin}" />
    </ControlTheme>
    
    <ControlTheme x:Key="FluentMenuItemIconTheme" TargetType="ContentControl">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <ControlTemplate>
                <Viewbox StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ContentPresenter x:Name="PART_ContentPresenter" Content="{TemplateBinding Content}" />
                </Viewbox>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!--<Style x:Key="SeparatorStyle" x:DataType="Separator" >
        <Setter Property="Template">
            <ControlTemplate TargetType="Separator">
                <Border BorderThickness="1" Margin="25,0,0,0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                -->
    <!--<Border BorderThickness="1" flat:BindableHighContrast.HighContrast="{DynamicResource ResourceKey={x:Static Member=SystemParameters.HighContrastKey}}" Margin="25,0,0,0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Style.Triggers>
                                        <Trigger Property="flat:BindableHighContrast.HighContrast" Value="True">
                                            <Setter Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type flat:Menu}}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>-->
    <!--
            </ControlTemplate>
        </Setter>
    </Style>-->

    <ControlTheme x:Key="{x:Type flat:Menu}" TargetType="flat:Menu">
        <Setter Property="ItemContainerTheme" Value="{StaticResource FlatTopLevelMenuItem}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type flat:Menu}">
                <Grid Background="{TemplateBinding Background}">
                    <ItemsPresenter Margin="2,0,0,0" x:Name="mnu_Il">
                        <ItemsPresenter.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsPresenter.ItemsPanel>
                    </ItemsPresenter>
                </Grid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

</ResourceDictionary>
